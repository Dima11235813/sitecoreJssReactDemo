notes of ideas

add section about sizing images and client expectations - how to use experience editor mode to your advantage for content creation guidlines

emphasize concept of three versions of app

jss code first - completely disconnected - graph ql endpoints need to be mocked - all app data needs to be mocked as in - fields, params, and dictionary items

jss experience editor - this is the view where a content creator can instantiate your components and set their fields and rendering parameters.

public site - jss connected mode shows what the site looks like in connected mode as in no mocked data - all data is retrieved through network calls

APOLLO GRAPH QL

The apollo graphql client batches requests at a certain interval - Research setting this interval in your jss react app

Talk about 3rd party integrations such as video embedding components - maybe to tangential

RESEARCH REAL TIME GRAPH QL 
from docs
The API also supports real-time data using GraphQL subscriptions.
https://jss.sitecore.com/docs/techniques/graphql/graphql-overview

AUTO CACHING WITH APOLLO?
automatic persisted queries reduce bandwidth needs even further.
https://jss.sitecore.com/docs/techniques/graphql/graphql-overview


JSS CODE first

MOCK DATA IN JAML FILES

Limitations of YAML file
A placeholder with no data will break your build so watch those YAML files during commits
In the future potential syntax validation - research YAML parsing
Corrupt yaml files aren't ignored but bread the build.

Use code formatter prettier or an alternative and then check for any obvious alignment issues

https://mdbootstrap.com/docs/react/advanced/popovers/